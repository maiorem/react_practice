<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="Guestbook">
	<!-- MyBatis ${필드명} 맵핑이 먼저 이루어진다 #{필드명} 맵핑이 나중에 이루어진다 쿼리를 콘솔에서 보면 $가 붙은건 
		? 가 아니라 실제 값으로 보여요 #이 붙은거는 ? 로 보인다 나중에 실제 값하고 결합한다 #붙은건 데이터 타입에 따라서 자동으로 
		'를 붙여준다 $는 그냥 그 위치에 문자열을 내보낼 뿐이라서 '가 필요하면 직접 붙여줘야 한다 $는 데이터를 문자열을 줘도 그대로 
		옮겨놓는다 테이블명이나 필드명이 추가되거나 할때는 ${필드명} 또는 ${테이블명}
		
		#{title}, ${title}  전달하는 파라미터 클래스안에 변수가 있어야 한다. getTitle  
		
		 -->
	
	<!--  id : 프로그램에서(Dao) 이 쿼리를 접근하기위한 식별값 : 유일해야 한다 
	      parameterType : 파라미터 클래스명 (typealias에 있는)
	      resultType : 반환할때 어떤 타입 사용할거냐-->
	<select id="Guestbook_getList" 
			parameterType="GuestbookDto"	
			resultType="GuestbookDto">
 
				select * from
				(
					select
						A.id
						,A.title
						,A.writer
						,A.contents --내용
						,to_char(A.wdate, 'yyyy-mm-dd') wdate
						,row_number() over (order by A.id desc) as num
						,ceil(row_number () over (order by A.id)/10-1) as pg
					from guestbook A
				)where pg=#{pg}
			
	</select>
	<!-- PreparedStatement 사용하면서 파라미터를 ?로 했는데 이게 mybatis는 #{변수명} 으로 대체 #{pg} 
		parameterType에 반드시 pg 라는 변수가 있어야 한다 그래서 getPg 라는 함수를 호출해서 값을 읽어와 끼워넣기 한다 
		디비에서 데이타를 가져와서 select 쿼리가 데이타를 보낼때는 resultType에서 지정한 클래스 안에 각 필드들에 대한 변수가 
		모두 있어야 한다. set변수명을 다 일일이 호출해서 데이터 넣어서 객체만들고 그 객체를 리스트에 저장해서 보낸다 -->

	<insert id="Guestbook_insert" parameterType="GuestbookDto">
		<!--
		   id가 자동증가되도록 
		     
		     오라클 시퀀스 객체 만들어서 쓴다 
		   mssql 은 일련번호 
		   mysql auto increment
		   
		   select  max(id)+1 from guestbook  max함수는 데이터가 한건도 없으면 null반환 
		   데이터가 한건도 없을때 위 쿼리를 실행시키면 null값이 반환된다. 
		    select  nvl(max(id),0) +1 from guestbook
		    nvl(필드나 수식, 기본값) 앞 부분이 null이면 기본값 반환 null 이 아니면 그값 그대로 반환 
		    
		    select 쿼리를 먼저 진행하도록 resultType 반환이 Integer타입 keyProperty 결과 받을 변수 
			order 진행순서 BEFORE 를 쓰면 먼저 진행된다
			keyProperty="id"
			id가 파라미터로 전달된 dto 안에 있어야 한다 
			
			order="BEFORE"  이 쿼리를 먼저 실행 
	    -->
		<selectKey resultType="Integer" keyProperty="id" order="BEFORE">
			select nvl(max(id),0)+1 as id
			from guestbook
		</selectKey>
		
		insert into guestbook(
			id
			,title
			,contents
			,writer
			,wdate
		)values(
			#{id}
			,#{title}
			,#{contents}
			,#{writer}
			,sysdate
		)
	</insert>

	<select id="Guestbook_getTotalCount" parameterType="GuestbookDto" 	resultType="Integer">
		select count(*)
		from guestbook
		
	</select>

	<select id="Guestbook_getView" parameterType="Integer" 	resultType="GuestbookDto">
		select
			A.id
			,A.title
			,A.writer
			,A.contents --내용
			,to_char(A.wdate, 'yyyy-mm-dd') wdate
		from guestbook A
		where id=#{id}
	</select>

	
	
	<!-- 수정용 -->
	<update id="Guestbook_update" parameterType="GuestbookDto">
		update 	guestbook
			set title = #{title}
			,contents = #{contents}
			,writer = #{writer}
		where id=#{id}
	</update>

	<!-- 삭제용 -->
	<update id="Guestbook_delete" parameterType="GuestbookDto">
		delete 
		from	guestbook
		where id=#{id}
	</update>

</mapper>
